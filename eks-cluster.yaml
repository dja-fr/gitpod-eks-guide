apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  # Template, please change
  # Please make sure you also update the definition of the variable
  # CLUSTERNAME=<cluster name> in the overrideBootstrapCommand section
  # and k8s.io/cluster-autoscaler/<cluster name>: "owned"
  # cluster-autoscaler will not be require additional labels in a future release.
  # https://github.com/kubernetes/autoscaler/pull/3968
  name: mrz
  # Template, please change
  region: eu-west-1
  version: "1.22"
  # this tags all resources created by the eks file, easy for tracking
  tags:
    team: "cx"
    project: "eks-guide-gpu"

iam:
  withOIDC: true

  serviceAccounts:
    - metadata:
        name: aws-load-balancer-controller
        namespace: kube-system
      wellKnownPolicies:
        awsLoadBalancerController: true
    - metadata:
        name: ebs-csi-controller-sa
        namespace: kube-system
      wellKnownPolicies:
        ebsCSIController: true
    - metadata:
        name: cluster-autoscaler
        namespace: kube-system
      wellKnownPolicies:
        autoScaler: true

availabilityZones:
  - eu-west-1a
  - eu-west-1b
  - eu-west-1c

# By default we create a dedicated VPC for the cluster
# You can use an existing VPC by supplying private and/or public subnets. Please check
# https://eksctl.io/usage/vpc-networking/#use-existing-vpc-other-custom-configuration
vpc:
  autoAllocateIPv6: false
  nat:
    # For production environments user HighlyAvailable
    # https://eksctl.io/usage/vpc-networking/#nat-gateway
    gateway: Single

# Enable EKS control plane logging
# https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html
cloudWatch:
  clusterLogging:
    enableTypes: ["audit", "authenticator"]

privateCluster:
  enabled: false
  additionalEndpointServices:
    - "autoscaling"
    - "logs"

# modifications made to workspaces that need to be made to services nodegroup also:
# region specific AMI's
# for gpu: 
managedNodeGroups:
  - name: workspaces
    desiredCapacity: 2
    minSize: 1
    maxSize: 10
    # because of AWS addons
    disableIMDSv1: false
    ssh:
      publicKeyName: "chris.barker"
    # Please configure the size of the volume and additional features
    # https://eksctl.io/usage/schema/#nodeGroups-volumeType
    # https://aws.amazon.com/es/ebs/pricing/
    volumeSize: 300
    volumeType: gp3
    volumeIOPS: 6000
    volumeThroughput: 500
    ebsOptimized: true
    # Use private subnets for nodes
    # https://eksctl.io/usage/vpc-networking/#use-private-subnets-for-initial-nodegroup
    privateNetworking: true
    ami: ami-0c9cd2d481133887c

    tags:
      # EC2 tags required for cluster-autoscaler auto-discovery
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/gitpod: "owned"
    iam:
      attachPolicyARNs: &attachPolicyARNs
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      withAddonPolicies: &withAddonPolicies
        albIngress: true
        autoScaler: true
        cloudWatch: true
        certManager: true
        ebs: true
    labels: { 
        "nvidia.com/gpu": "true",
        "k8s.amazonaws.com/accelerator": "nvidia-tesla",
        "gitpod.io/workload_workspace_services": "true",
        "gitpod.io/workload_workspace_regular": "true",
        "gitpod.io/workload_workspace_headless": "true"
      }

    # Using custom AMI images require the definition of overrideBootstrapCommand
    # to ensure that nodes are able to join the cluster https://eksctl.io/usage/custom-ami-support/
    overrideBootstrapCommand: |
      #!/bin/bash
      export CLUSTER_NAME=mrz
      export CONTAINER_RUNTIME="containerd"
      export USE_MAX_PODS=false

      export KUBELET_EXTRA_ARGS="--max-pods=110"

      sed -i 's/KUBELET_EXTRA_ARGS=$2/KUBELET_EXTRA_ARGS="$2 $KUBELET_EXTRA_ARGS"/' /etc/eks/bootstrap.sh

      /etc/eks/bootstrap.sh ${CLUSTER_NAME}

    spot: false
    # https://eksctl.io/usage/instance-selector/
    #instanceSelector:
    #  vCPUs: 8
    #  memory: 64Gib
    # or use a custom list
    # 4 gpu 32 cpu 244gb mem
    instanceTypes: ["p2.xlarge"]

  - name: services
    desiredCapacity: 1
    minSize: 1
    maxSize: 3
    # because of AWS addons
    disableIMDSv1: false
    ssh:
      publicKeyName: "chris.barker"
    # Please configure the size of the volume and additional features
    # https://eksctl.io/usage/schema/#nodeGroups-volumeType
    # https://aws.amazon.com/es/ebs/pricing/
    volumeSize: 100
    volumeType: gp3
    volumeIOPS: 6000
    volumeThroughput: 500
    ebsOptimized: true
    # Use private subnets for nodes
    # https://eksctl.io/usage/vpc-networking/#use-private-subnets-for-initial-nodegroup
    privateNetworking: true
    # aws ssm get-parameter --name /aws/service/eks/optimized-ami/1.22/amazon-linux-2/recommended/image_id --query "Parameter.Value" --output text
    ami: ami-0123eaf3fc3256084

    tags:
      # EC2 tags required for cluster-autoscaler auto-discovery
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/gitpod: "owned"
    iam:
      attachPolicyARNs: *attachPolicyARNs
      withAddonPolicies: *withAddonPolicies
    labels: { 
      "gitpod.io/workload_meta": "true", 
      "gitpod.io/workload_ide": "true"
      }
    # Using custom AMI images require the definition of overrideBootstrapCommand
    # to ensure that nodes are able to join the cluster https://eksctl.io/usage/custom-ami-support/
    overrideBootstrapCommand: |
      #!/bin/bash
      export CLUSTER_NAME=mrz
      export CONTAINER_RUNTIME="containerd"
      export USE_MAX_PODS=false

      export KUBELET_EXTRA_ARGS="--max-pods=110"

      sed -i 's/KUBELET_EXTRA_ARGS=$2/KUBELET_EXTRA_ARGS="$2 $KUBELET_EXTRA_ARGS"/' /etc/eks/bootstrap.sh

      /etc/eks/bootstrap.sh ${CLUSTER_NAME}

    spot: false
    # https://eksctl.io/usage/instance-selector/
    #instanceSelector:
    #  vCPUs: 4
    #  memory: 16Gib
    # or use a custom list
    instanceTypes: ["m6i.2xlarge"]
